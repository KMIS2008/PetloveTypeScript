{"version":3,"file":"static/js/200.bffaef3f.chunk.js","mappings":"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","sources":["components/NoticesFilters/NoticesFilters.styled.js","components/NoticesFilters/NoticesFilters.js","Pages/Notices/Notices.js","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.js","components/SearchField/SearchField.styled.js","components/SearchField/SearchField.js","components/Title/title.styled.js","components/Title/Title.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field} from 'formik';\n\nexport const Container = styled.div`\nmargin-bottom: ${p=>p.theme.spacing(10)};\npadding: ${p=>p.theme.spacing(4)};\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n`\n\nexport const ContainerTabletSelect = styled.div`\n@media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px; \n    justify-content: start;\n    align-items: center;\n}\n\n     @media (min-width: 1280px) {\n      flex-wrap: nowrap;\n    } \n`\n\nexport const ContainerSelect = styled.div`\ndisplay: flex;\ngap: ${p=>p.theme.spacing(2)};\nmargin-bottom: ${p=>p.theme.spacing(4)};\n\nflex-basis: 55%; \n\n@media (min-width: 1280px) {\nflex-basis: 50%; \nmargin-bottom:0%;\n}\n`\n\nexport const CustomSelect = styled(Field)`\n  width: 100%;\n  height: 42px;\n  padding: 0 12px;\n  border-radius: 30px;\n  border: none;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #262626;\n\n  &:focus {\n    outline: none;\n    color: ${(p) => p.theme.colors.yellow};\n  }\n\n  &:hover {\n    color: #26262699;\n    border: 1px solid #F6B83D;\n  }\n\n  @media (min-width: 768px) {\nflex-basis: 50%; \n}\n`;\n\nexport const CustomSelectType = styled(Field)`\n  width: 100%;\n  height: 42px;\n  padding: 0 12px;\n  border-radius: 30px;\n  border: none;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #262626;\n\n  &:focus {\n    outline: none;\n    color: ${(p) => p.theme.colors.yellow};\n  }\n\n  &:hover {\n    color: #26262699;\n    border: 1px solid #F6B83D;\n  }\n\n  @media (min-width: 768px) {\nflex-basis: 30%; \n}\n`;\n\nexport const Option = styled.option`\n\n  border: none;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #26262699;\n\n  &:hover {\n    color: ${(p) => p.theme.colors.yellow};\n  }\n`;\n\nexport const ContainerSvg = styled.div`\nposition: relative;\nalign-items: center;\n  margin-top: 20px;\n@media (min-width: 768px) {\n  flex-basis: 30%; \n  height: 48px;\n  margin-top: 0;\n}\n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const SvgReset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 40px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const Reset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 5px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const Straight = styled.div`\nmargin-top: ${(p) => p.theme.spacing(2)};\nmargin-bottom: ${(p) => p.theme.spacing(4)};\nwidth: 100%;\nborder: 1px solid #2626261A;\n`\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const RadioButtonLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 30px;\n  border: none;\n  border-radius: 30px;\n  background-color: ${(p) => p.theme.colors.white};\n  cursor: pointer;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1,29;\n  letter-spacing: -0.03em;\n  text-align: left;\n\n  color: #262626;\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.yellow};\n    color:${(p) => p.theme.colors.white};\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n \n  display: none;\n\n  &:checked + ${RadioButtonLabel} {\n    background-color: ${(p) => p.theme.colors.yellow};\n    color: ${(p) => p.theme.colors.white};\n  }\n`;\n\nexport const Button = styled.button`\nwidth: 123px;\nheight: 42px;\nborder-radius: 30px;\n\ncolor: #262626;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,5;\nletter-spacing: -0.03em;\nbackground-color: #FFFFFF;\nborder: 1px solid #F6B83D;\n\n&:hover{\n    background-color: #F6B83D;\n    color: #FFFFFF;\n}\n\n`","import {\n  Container, ContainerTabletSelect, ContainerSelect, CustomSelect, CustomSelectType,\n  Option, ContainerSvg, Svg, SvgReset, Straight, Reset,\n  RadioGroup, RadioButtonLabel, RadioButton, Button\n} from './NoticesFilters.styled';\nimport { SearchField } from \"components/SearchField/SearchField\";\nimport Select from 'react-select';\nimport { Formik, Form } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport axios from 'axios';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { getNoticesFilter } from '../../redux/operations';\n\naxios.defaults.baseURL = \"https://petlove.b.goit.study/api\";\n\nexport const NoticesFilters = ({ notices }) => {\n  const dispatch = useDispatch();\n  const [iscategories, setCategories] = useState([]);\n  const [isgenders, setGenders] = useState([]);\n  const [ispetTypes, setPetTypes] = useState([]);\n  const [islocations, setLocations] = useState([]);\n\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [selectedSort, setSelectedSort] = useState(null);\n  const [selectCategories, setSelectCategories] = useState('');\n  const [selectGenders, setSelectGenders] = useState('');\n  const [selectPetTypes, setSelectPetTypes] = useState('');\n\n  const [hasInput, setHasInput] = useState(false);\n\n  const getFilter = () => {\n    return {\n      category: selectCategories,\n      gender: selectGenders,\n      species: selectPetTypes,\n      location: selectedLocation,\n      price: selectedSort === 'highprice' ? false : (selectedSort === 'lowprice' ? true : undefined),\n      popularity: selectedSort === 'popularity' ? false : (selectedSort === 'unpopularity' ? true : undefined),\n    };\n  };\n\n  const handleCategoriesChange = (e, setFieldValue) => {\n    const value = e.target.value;\n    setFieldValue('category', value);\n    setSelectCategories(value);\n    setHasInput(e.target.value.trim().length > 0);\n    dispatch(getNoticesFilter({ ...getFilter(), category: value }));\n  };\n\n  const handleGendersChange = (e, setFieldValue) => {\n    const value = e.target.value;\n    setFieldValue('gender', value);\n    setSelectGenders(value);\n    setHasInput(e.target.value.trim().length > 0);\n    dispatch(getNoticesFilter({ ...getFilter(), gender: value }));\n  };\n\n  const handleTypesChange = (e, setFieldValue) => {\n    const value = e.target.value;\n    setFieldValue('byTypes', value);\n    setSelectPetTypes(value);\n    setHasInput(e.target.value.trim().length > 0);\n    dispatch(getNoticesFilter({ ...getFilter(), species: value }));\n  };\n\n  const handleSortByPopularity = () => {\n    setSelectedSort('popularity');\n    setHasInput(true);\n    dispatch(getNoticesFilter({ ...getFilter(), popularity: false }));\n  };\n\n  const handleSortByUnpopularity = () => {\n    setSelectedSort('unpopularity');\n    setHasInput(true);\n    dispatch(getNoticesFilter({ ...getFilter(), popularity: true }));\n  };\n\n  const handleSortByExpensive = () => {\n    setSelectedSort('highprice');\n    setHasInput(true);\n    dispatch(getNoticesFilter({ ...getFilter(), price: false }));\n  };\n\n  const handleSortByCheap = () => {\n    setSelectedSort('lowprice');\n    setHasInput(true);\n    dispatch(getNoticesFilter({ ...getFilter(), price: true }));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const categoriesResponse = await axios.get('/notices/categories');\n      const gendersResponse = await axios.get('/notices/sex');\n      const petTypesResponse = await axios.get('/notices/species');\n      const locationsResponse = await axios.get('/cities');\n\n      setCategories(categoriesResponse.data);\n      setGenders(gendersResponse.data);\n      setPetTypes(petTypesResponse.data);\n      setLocations(locationsResponse.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const locationOptions = islocations.map(location => ({\n    value: location._id,\n    label: `${location.stateEn}, ${location.cityEn}, ${location.countyEn}`\n  }));\n\n  const customStyles = {\n    control: (provided, state) => ({\n      ...provided,\n      borderRadius: '30px',\n      border: 'none',\n      height: '42px',\n      padding: '0 12px',\n      fontFamily: 'Manrope',\n      fontSize: '14px',\n      fontWeight: '500',\n      lineHeight: '1.29',\n      letterSpacing: '-0.03em',\n      color: '#262626',\n      boxShadow: state.isFocused ? '0 0 0 1px #F6B83D' : provided.boxShadow,\n      '&:hover': {\n        border: '1px solid #F6B83D',\n      },\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      borderRadius: '15px',\n      border: 'none',\n      padding: '0 12px',\n      fontFamily: 'Manrope',\n      fontSize: '14px',\n      fontWeight: '500',\n      lineHeight: '1.29',\n      letterSpacing: '-0.03em',\n      color: state.isSelected ? '#fff' : '#26262699',\n      backgroundColor: state.isSelected ? '#262626' : '#fff',\n      '&:hover': {\n        color: '#262626',\n      },\n    }),\n    placeholder: (provided) => ({\n      ...provided,\n      color: '#262626',\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: '#262626',\n    }),\n    dropdownIndicator: (provided) => ({\n      ...provided,\n      display: 'none',\n    }),\n    indicatorSeparator: (provided) => ({\n      ...provided,\n      display: 'none',\n    }),\n  };\n\n  const formatOptionLabel = ({ label }, { inputValue }) => {\n    if (!inputValue) return label;\n\n    const highlightedText = label.substring(0, inputValue.length);\n    const restOfText = label.substring(inputValue.length);\n\n    return (\n      <>\n        <span style={{ color: '#262626' }}>{highlightedText}</span>\n        <span style={{ color: '#26262666' }}>{restOfText}</span>\n      </>\n    );\n  };\n\n  const handleResetClick = (resetForm) => {\n    resetForm();\n    setSelectedLocation(null);\n    setSelectedSort(null);\n    setSelectCategories('');\n    setSelectGenders('');\n    setSelectPetTypes('');\n    setHasInput(false);\n    dispatch(getNoticesFilter({}));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        search: '',\n        category: '',\n        gender: '',\n        petType: '',\n        location: '',\n        sortBy: '',\n      }}\n      onSubmit={(values, actions) => {\n        dispatch(getNoticesFilter(values));\n      }}\n    >\n      {({ resetForm, setFieldValue, values }) => (\n        <Form>\n          <Container>\n            <ContainerTabletSelect>\n              <SearchField name=\"search\" fetch={getNoticesFilter} setFieldValue={(value) => setFieldValue('search', value)} />\n              <ContainerSelect>\n                <CustomSelect\n                  as=\"select\"\n                  id=\"category\"\n                  name=\"category\"\n                  value={selectCategories}\n                  onChange={(e) => handleCategoriesChange(e, setFieldValue)}\n                >\n                  <Option value=\"\">Category</Option>\n                  {iscategories.map(category => (\n                    <Option key={nanoid()} value={category}>\n                      {category}\n                    </Option>\n                  ))}\n                </CustomSelect>\n                <CustomSelect\n                  as=\"select\"\n                  name=\"gender\"\n                  value={selectGenders}\n                  onChange={(e) => handleGendersChange(e, setFieldValue)}\n                >\n                  <Option value=\"\">By gender</Option>\n                  {isgenders.map((gender) => (\n                    <Option key={nanoid()} value={gender}>\n                      {gender}\n                    </Option>\n                  ))}\n                </CustomSelect>\n              </ContainerSelect>\n              <CustomSelectType\n                as=\"select\"\n                name=\"byTypes\"\n                value={selectPetTypes}\n                onChange={(e) => handleTypesChange(e, setFieldValue)}\n              >\n                <Option value=\"\">By type</Option>\n                {ispetTypes.map((byType) => (\n                  <option key={nanoid()} value={byType}>\n                    {byType}\n                  </option>\n                ))}\n              </CustomSelectType>\n              <ContainerSvg>\n                <Select\n                  name=\"location\"\n                  defaultValue={islocations}\n                  value={selectedLocation}\n                  placeholder=\"Location\"\n                  styles={customStyles}\n                  formatOptionLabel={formatOptionLabel}\n                  options={locationOptions}\n                  onChange={(option) => {\n                    setSelectedLocation(option);\n                    setHasInput(true);\n                    setFieldValue('location', option.value);\n                    dispatch(getNoticesFilter({ ...getFilter(), location: option.value }));\n                  }}\n                />\n                <button type='submit'>\n                  <Svg>\n                    <use xlinkHref={sprite + '#icon-search'} />\n                  </Svg>\n                </button>\n\n                {selectedLocation && <SvgReset onClick={() => handleResetClick(resetForm)}>\n                  <use xlinkHref={sprite + '#icon-x'} />\n                </SvgReset>}\n              </ContainerSvg>\n            </ContainerTabletSelect>\n\n            <Straight></Straight>\n\n            <RadioGroup role=\"group\" aria-labelledby=\"sort-group\">\n              <RadioButton\n                type=\"radio\"\n                name=\"sort\"\n                value=\"popularity\"\n                id=\"popularity\"\n                onChange={handleSortByPopularity}\n                checked={selectedSort === 'popularity'}\n              />\n              <RadioButtonLabel htmlFor=\"popularity\">\n                Popular\n                {selectedSort === 'popularity' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n              </RadioButtonLabel>\n\n              <RadioButton\n                type=\"radio\"\n                name=\"sort\"\n                value=\"unpopularity\"\n                id=\"unpopularity\"\n                onChange={handleSortByUnpopularity}\n                checked={selectedSort === 'unpopularity'}\n              />\n              <RadioButtonLabel htmlFor=\"unpopularity\">\n                Unpopular\n                {selectedSort === 'unpopularity' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n              </RadioButtonLabel>\n\n              <RadioButton\n                type=\"radio\"\n                name=\"sort\"\n                value=\"lowprice\"\n                id=\"lowprice\"\n                onChange={handleSortByCheap}\n                checked={selectedSort === 'lowprice'}\n              />\n              <RadioButtonLabel htmlFor=\"lowprice\">\n                Cheap\n                {selectedSort === 'lowprice' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n              </RadioButtonLabel>\n\n              <RadioButton\n                type=\"radio\"\n                name=\"sort\"\n                value=\"highprice\"\n                id=\"highprice\"\n                onChange={handleSortByExpensive}\n                checked={selectedSort === 'highprice'}\n              />\n              <RadioButtonLabel htmlFor=\"highprice\">\n                Expensive\n                {selectedSort === 'highprice' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n              </RadioButtonLabel>\n            </RadioGroup>\n          </Container>\n          {hasInput ? (<Button type='button' onClick={() => handleResetClick(resetForm)}>Reset</Button>) : null}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n                    \n                    \n","import { Title } from \"components/Title/Title\";\nimport { Pagination } from \"components/Pagination/Pagination\";\nimport {fetchnotices} from '../../redux/operations';\nimport {NoticesList} from '../../components/NoticesList/NoticesList';\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {selectorNotices} from '../../redux/selects';\nimport {NoticesFilters} from '../../components/NoticesFilters/NoticesFilters';\n\nexport default function Notices(){\n    const dispatch=useDispatch();\n    const [isPageNumber, setIsPageNumber] = useState(1);\n    const notices = useSelector(selectorNotices);\n\n    const handleChangeNewPage=(number)=>{\n        setIsPageNumber(number);\n    }\n\n    useEffect(()=>{\n      dispatch(fetchnotices(isPageNumber))\n    }, [dispatch, isPageNumber])\n    return(\n        <>\n          <Title name=\"Find your favorite pet\"/>\n          <NoticesFilters notices={notices}/>\n          <NoticesList notices={notices}/>\n          <Pagination handleChangeNewPage={handleChangeNewPage} currentPage={isPageNumber}/>\n        </>\n    )\n}","import styled from \"styled-components\";\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport { RiArrowLeftDoubleFill, RiArrowRightDoubleFill } from 'react-icons/ri';\n\nexport const Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ngap: 6px;\n`\n\nexport const Button = styled.button`\ndisplay: block;\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\ncursor: pointer;\nfill: currentColor;\nborder: 1px solid #2626260D;\ntext-align: center;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\ncolor: #262626;\n\n&:hover{\n    background-color: ${p => p.theme.colors.yellow};\n    color:   ${p => p.theme.colors.white};\n\n}\n`\nexport const ButtonNext = styled.button`\ndisplay: block;\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\ncursor: pointer;\nborder: 1px solid #2626260D;\ntext-align: center;\nfont-size: 20px;\n\n&:hover{\n    color:  #262626;\n    border: 1px solid #26262633;\n}\n`\n\nexport const StyledRiArrowLeftDoubleFill = styled(RiArrowLeftDoubleFill)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledIoIosArrowBack = styled(IoIosArrowBack)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledIoIosArrowForward = styled(IoIosArrowForward)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledArrowRightDoubleFill = styled(RiArrowRightDoubleFill)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;","import { useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport {selectorTotalPages} from '../../redux/selects';\nimport {Container, Button, ButtonNext, StyledRiArrowLeftDoubleFill, \n        StyledIoIosArrowBack, StyledIoIosArrowForward, StyledArrowRightDoubleFill } from './Pagination.styled';\n\n\nexport const Pagination=({handleChangeNewPage, currentPage})=>{\n  const totalPages=useSelector(selectorTotalPages);\n\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n\n  const visiblePages = isMobile ? 2 : 3;\n\n  const generatePageNumbers = () => {\n    let startPage = Math.max(1, currentPage - Math.floor(visiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + visiblePages - 1);\n\n    if (endPage - startPage < visiblePages - 1) {\n        startPage = Math.max(1, endPage - visiblePages + 1);\n    }\n\n    const pages = [];\n    for (let i = startPage; i <= endPage; i++) {\n        pages.push(i);\n    }\n    return pages;\n}\n\nconst pages = generatePageNumbers();\n\n    return(\n<>\n     {totalPages > 1 && (\n        <Container>\n        \n            <ButtonNext onClick={()=>handleChangeNewPage(1)} \n                        disabled={currentPage === 1}\n                        type='buton'>  \n                        <StyledRiArrowLeftDoubleFill /> \n           </ButtonNext>\n\n           <ButtonNext onClick={()=>handleChangeNewPage(currentPage-1)}\n                       disabled={currentPage === 1}\n                       type='buton'> \n                       <StyledIoIosArrowBack/> \n           </ButtonNext>  \n\n           {pages[0] > 1 && <Button>...</Button>}\n            \n            {pages.map((page) => (\n                <Button \n                    key={page} \n                    type='button' \n                    onClick={() => handleChangeNewPage(page)}\n                >\n                    {page}\n                </Button>\n            ))}\n\n            {pages[pages.length - 1] < totalPages && <Button>...</Button>}\n          \n           <ButtonNext onClick={()=>handleChangeNewPage(currentPage+1)}\n                       disabled={currentPage === totalPages}\n                       type='buton'>\n                       <StyledIoIosArrowForward/> \n           </ButtonNext>\n\n           <ButtonNext onClick={()=>handleChangeNewPage(totalPages)} \n                       disabled={currentPage === totalPages}\n                       type='buton'>\n                       <StyledArrowRightDoubleFill/>\n           </ButtonNext> \n\n        </Container>\n       )}\n</>\n    )\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\nposition: relative;\n@media (min-width: 768px) {\n    width: 230px;\n  }\n`\nexport const Input = styled.input`\nmargin-bottom: ${p=>p.theme.spacing(3)};\npadding-left : ${p=>p.theme.spacing(3)};\nwidth: 100%;\nheight: 42px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: left;\n\nborder-radius: 30px;\nborder: 1px solid #26262626;\n\n&::placeholder {\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\ncolor: rgba(38, 38, 38, 0.5);\n  }\n\n  &:hover {\n    border: 1px solid ${p=>p.theme.colors.yellow}\n  }\n\n  @media (min-width: 768px) {\n    width: 230px;\n    height: 48px;\n  }\n\n  @media (min-width: 1280px) {\n   margin-bottom:0;\n  }\n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const SvgReset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 40px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`","import React, { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport {Container, Input, Svg, SvgReset} from './SearchField.styled';\nimport { useDispatch } from 'react-redux';\n\nexport const SearchField =({fetch})=>{\n  const dispatch =  useDispatch();\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setSearchValue(e.target.value);\n    };\n\n    const handleResetClick = () => {\n        setSearchValue('');\n    };\n\n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      dispatch(fetch({ keyword: searchValue, pageNumber: 1}));\n      handleResetClick();\n  };\n\n    return(\n        <Container onClick = {handleSubmit}>\n           <Input placeholder=\"Search\"\n           name='name'\n           type='text'\n           value={searchValue}\n           onChange={handleInputChange}/>\n\n           <button type='submit'>\n             <Svg >\n                <use xlinkHref={sprite + '#icon-search'}/>\n              </Svg  >           \n           </button>\n\n           {searchValue  &&   <SvgReset onClick = {handleResetClick}>\n                <use xlinkHref={sprite + '#icon-x'}/>\n            </SvgReset> }\n\n        </Container>\n    )\n}\n\n","import styled from 'styled-components';\n\nexport const TitleLogin = styled.h1`\nmargin-bottom : ${p=>p.theme.spacing(2)};\nfont-family: Manrope;\nfont-size: 28px;\nfont-weight: 700;\nline-height: 1;\nletter-spacing: -0.04em;\ntext-align: left;\ncolor: #262626;\n\n@media (min-width: 768px) {\nfont-size: 54px;\n}\n`","import {TitleLogin} from './title.styled';\n\nexport const Title =({name})=>{\n    return(\n        <TitleLogin>{name}</TitleLogin>\n    )\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","ContainerTabletSelect","_templateObject2","ContainerSelect","_templateObject3","CustomSelect","Field","_templateObject4","colors","yellow","CustomSelectType","_templateObject5","Option","_templateObject6","ContainerSvg","_templateObject7","Svg","_templateObject8","SvgReset","_templateObject9","Reset","_templateObject10","Straight","_templateObject11","RadioGroup","_templateObject12","RadioButtonLabel","_templateObject13","white","RadioButton","_templateObject14","Button","_templateObject15","axios","NoticesFilters","_ref","notices","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","iscategories","setCategories","_useState3","_useState4","isgenders","setGenders","_useState5","_useState6","ispetTypes","setPetTypes","_useState7","_useState8","islocations","setLocations","_useState9","_useState10","selectedLocation","setSelectedLocation","_useState11","_useState12","selectedSort","setSelectedSort","_useState13","_useState14","selectCategories","setSelectCategories","_useState15","_useState16","selectGenders","setSelectGenders","_useState17","_useState18","selectPetTypes","setSelectPetTypes","_useState19","_useState20","hasInput","setHasInput","getFilter","category","gender","species","location","price","undefined","popularity","handleSortByPopularity","getNoticesFilter","_objectSpread","handleSortByUnpopularity","handleSortByExpensive","handleSortByCheap","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","categoriesResponse","gendersResponse","petTypesResponse","locationsResponse","_context","prev","next","sent","data","stop","apply","arguments","locationOptions","map","value","_id","label","concat","stateEn","cityEn","countyEn","customStyles","control","provided","state","borderRadius","border","height","padding","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","color","boxShadow","isFocused","option","isSelected","backgroundColor","placeholder","singleValue","dropdownIndicator","display","indicatorSeparator","formatOptionLabel","_ref3","_ref4","inputValue","highlightedText","substring","length","restOfText","_jsxs","_Fragment","children","_jsx","style","handleResetClick","resetForm","Formik","initialValues","search","petType","sortBy","onSubmit","values","actions","_ref5","setFieldValue","Form","SearchField","name","fetch","as","id","onChange","e","target","trim","handleCategoriesChange","nanoid","handleGendersChange","handleTypesChange","byType","Select","defaultValue","styles","options","type","xlinkHref","sprite","onClick","role","checked","htmlFor","Notices","isPageNumber","setIsPageNumber","useSelector","selectorNotices","fetchnotices","Title","NoticesList","Pagination","handleChangeNewPage","number","currentPage","ButtonNext","StyledRiArrowLeftDoubleFill","RiArrowLeftDoubleFill","StyledIoIosArrowBack","IoIosArrowBack","StyledIoIosArrowForward","IoIosArrowForward","StyledArrowRightDoubleFill","RiArrowRightDoubleFill","totalPages","selectorTotalPages","visiblePages","useMediaQuery","query","pages","startPage","Math","max","floor","endPage","min","i","push","generatePageNumbers","disabled","page","Input","searchValue","setSearchValue","evt","preventDefault","keyword","pageNumber","TitleLogin"],"sourceRoot":""}